run java by command line:
compile class
->
  Ex D:/abc/src/a/A.class
  javac D:/abc/src/a/A.class

Run main method
->class file.
  Ex: project abc D:/abc/src/a/A.class (className of A.class is a.A.class)
  java -classpath D:/abc/src A
->jar file
  Ex D:/abc.jar!/a/A.class (className of A.class is a.A.class)
  java -classpath D:/abc.jar A
->compress file
  Ex D:/abc.zip!/a/A.class (className of A.class is a.A.class)
  java -classpath D:/abc.zip A
  
Java load class at runtime
Ex  Ex: project abc D:/user/../Desktop/a/B.class (className of B.class is a.B.class)
	ClassLoader cld = URLClassLoader.newInstance(new URL[] {new File("D:/user/../Desktop").toURI().toURL()});
	Class<?> clazz = Class.forName("a.B", true, cld);
	clazz.getDeclaredMethod("print").invoke(clazz.newInstance());
Ex  Ex: jar abc D:/user/../Desktop/abc.jar!/a.B (className of B.class is a.B.class)
	ClassLoader cld = URLClassLoader.newInstance(new URL[] {new File("D:/user/../Desktop/abc.jar").toURI().toURL()});
	Class<?> clazz = Class.forName("a.B", true, cld);
	clazz.getDeclaredMethod("print").invoke(clazz.newInstance());
Ex  Ex: compress abc D:/user/../Desktop/abc.zip!/a.B (className of B.class is a.B.class)
	ClassLoader cld = URLClassLoader.newInstance(new URL[] {new File("D:/user/../Desktop/abc.zip").toURI().toURL()});
	Class<?> clazz = Class.forName("a.B", true, cld);
	clazz.getDeclaredMethod("print").invoke(clazz.newInstance());	
